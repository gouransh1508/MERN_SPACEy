{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\goura\\\\Downloads\\\\mern-App\\\\client\\\\src\\\\components\\\\dashboard\\\\Dashboard.js\";\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { logoutUser } from \"../../actions/authActions\";\nimport { registerEvent } from \"../../actions/authActions\";\nimport classnames from \"classnames\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Dashboard extends Component {\n  constructor() {\n    super();\n\n    this.onChange = e => {\n      this.setState({\n        [e.target.id]: e.target.value\n      });\n    };\n\n    this.onSubmit = e => {\n      e.preventDefault();\n      const newEvent = {\n        EMail: this.state.EMail,\n        EventName: this.state.EventName,\n        EventType: this.state.EventType,\n        EventStart: this.state.EventStart,\n        EventEnd: this.state.EventEnd,\n        NoPeople: this.state.NoPeople,\n        EventPlace: this.state.EventPlace\n      };\n      this.props.registerEvent(newEvent, this.props.history);\n      console.log(newEvent);\n      document.getElementById('EventForm').reset();\n      console.log(this.props.auth);\n    };\n\n    this.onLogoutClick = e => {\n      e.preventDefault();\n      this.props.logoutUser();\n    };\n\n    this.state = {\n      EMail: \"\",\n      EventName: \"\",\n      EventType: \"\",\n      EventStart: \"\",\n      EventEnd: \"\",\n      NoPeople: \"\",\n      EventPlace: \"\",\n      errors: {}\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({\n        errors: nextProps.errors\n      });\n    }\n  }\n\n  render() {\n    const {\n      errors\n    } = this.state;\n    const {\n      user\n    } = this.props.auth;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: \"75vh\"\n      },\n      className: \"container valign-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col s12 center-align\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: [/*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"Hey there,\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 15\n            }, this), \" \", user.name.split(\" \")[0], /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"flow-text grey-text text-darken-1\",\n              children: [\"You are logged into a full-stack\", \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  fontFamily: \"monospace\"\n                },\n                children: \"MERN\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 17\n              }, this), \" app \\uD83D\\uDC4F\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            style: {\n              width: \"150px\",\n              borderRadius: \"3px\",\n              letterSpacing: \"1.5px\",\n              marginTop: \"1rem\"\n            },\n            onClick: this.onLogoutClick,\n            className: \"btn btn-large waves-effect waves-light hoverable blue accent-3\",\n            children: \"Logout\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        style: {\n          paddingTop: '400px'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col s8 offset-s1\",\n            children: [/*#__PURE__*/_jsxDEV(Link, {\n              to: \"/\",\n              className: \"btn-flat waves-effect\",\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"material-icons left\",\n                children: \"keyboard_backspace\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 15\n              }, this), \" Back to home\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col s12\",\n              style: {\n                paddingLeft: \"11.250px\"\n              },\n              children: /*#__PURE__*/_jsxDEV(\"h4\", {\n                children: \"Enter Event Details\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n              id: \"EventForm\",\n              style: {\n                paddingTop: '20px'\n              },\n              noValidate: true,\n              onSubmit: this.onSubmit,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"input-field col s12\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  onChange: this.onChange,\n                  value: user.email,\n                  error: errors.EMail,\n                  id: \"EMail\",\n                  type: \"email\",\n                  className: classnames(\"\", {\n                    invalid: errors.EMail\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 99,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"EMail\",\n                  children: \"Email\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 109,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"red-text\",\n                  children: errors.EMail\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 110,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"input-field col s12\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  onChange: this.onChange,\n                  value: this.state.EventName,\n                  error: errors.EventName,\n                  id: \"EventName\",\n                  type: \"text\",\n                  className: classnames(\"\", {\n                    invalid: errors.EventName\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 113,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"EventName\",\n                  children: \"Name of Event\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 123,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"red-text\",\n                  children: errors.EventName\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 124,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"input-field col s12\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  onChange: this.onChange,\n                  value: this.state.EventType,\n                  error: errors.EventType,\n                  id: \"EventType\",\n                  type: \"text\",\n                  className: classnames(\"\", {\n                    invalid: errors.EventType\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 127,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"EventType\",\n                  children: \"Type of Event\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 137,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"red-text\",\n                  children: errors.EventType\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 138,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"input-field col s12\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  onChange: this.onChange,\n                  value: this.state.EventStart,\n                  error: errors.EventStart,\n                  id: \"EventStart\",\n                  type: \"date\",\n                  className: classnames(\"\", {\n                    invalid: errors.EventStart\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 141,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"EventStart\",\n                  children: \"Starting Date of Event \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 151,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"red-text\",\n                  children: errors.EventStart\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 152,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 140,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"input-field col s12\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  onChange: this.onChange,\n                  value: this.state.EventEnd,\n                  error: errors.EventEnd,\n                  id: \"EventEnd\",\n                  type: \"date\",\n                  className: classnames(\"\", {\n                    invalid: errors.EventEnd\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 155,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"EventEnd\",\n                  children: \"Ending Date of Event\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 165,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"red-text\",\n                  children: errors.EventEnd\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 166,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 154,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"input-field col s12\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  onChange: this.onChange,\n                  value: this.state.NoPeople,\n                  error: errors.NoPeople,\n                  id: \"NoPeople\",\n                  type: \"number\",\n                  className: classnames(\"\", {\n                    invalid: errors.NoPeople\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 169,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"NoPeople\",\n                  children: \"Expected Number of People In Event\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 179,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"red-text\",\n                  children: errors.NoPeople\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 180,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 168,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"input-field col s12\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  onChange: this.onChange,\n                  value: this.state.EventPlace,\n                  error: errors.EventPlace,\n                  id: \"EventPlace\",\n                  type: \"text\",\n                  className: classnames(\"\", {\n                    invalid: errors.EventPlace\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 183,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"EventPlace\",\n                  children: \"Place of Event\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 193,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"red-text\",\n                  children: errors.EventPlace\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 194,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 182,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col s12\",\n                style: {\n                  paddingLeft: \"11.250px\"\n                },\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  style: {\n                    width: \"150px\",\n                    borderRadius: \"3px\",\n                    letterSpacing: \"1.5px\",\n                    marginTop: \"1rem\",\n                    fontSize: \"8px\"\n                  },\n                  type: \"submit\",\n                  className: \"btn btn-large waves-effect waves-light hoverable blue accent-3\",\n                  children: \"Register Event\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 197,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 196,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nDashboard.propTypes = {\n  registerEvent: PropTypes.func.isRequired,\n  logoutUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  errors: state.errors\n});\n\nexport default connect(mapStateToProps, {\n  logoutUser,\n  registerEvent\n})(Dashboard);","map":{"version":3,"sources":["C:/Users/goura/Downloads/mern-App/client/src/components/dashboard/Dashboard.js"],"names":["React","Component","PropTypes","Link","connect","logoutUser","registerEvent","classnames","Dashboard","constructor","onChange","e","setState","target","id","value","onSubmit","preventDefault","newEvent","EMail","state","EventName","EventType","EventStart","EventEnd","NoPeople","EventPlace","props","history","console","log","document","getElementById","reset","auth","onLogoutClick","errors","componentWillReceiveProps","nextProps","render","user","height","name","split","fontFamily","width","borderRadius","letterSpacing","marginTop","paddingTop","paddingLeft","email","invalid","fontSize","propTypes","func","isRequired","object","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { logoutUser } from \"../../actions/authActions\";\r\nimport { registerEvent } from \"../../actions/authActions\";\r\nimport classnames from \"classnames\";\r\n\r\nclass Dashboard extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      EMail: \"\",\r\n      EventName: \"\",\r\n      EventType: \"\",\r\n      EventStart: \"\",\r\n      EventEnd: \"\",\r\n      NoPeople: \"\",\r\n      EventPlace: \"\",\r\n      errors: {}\r\n    };\r\n  }\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({\r\n        errors: nextProps.errors\r\n      });\r\n    }\r\n  }\r\n  onChange = e => {\r\n    this.setState({ [e.target.id]: e.target.value });\r\n  };\r\n  onSubmit = e => {\r\n    e.preventDefault();\r\nconst newEvent = {\r\n      EMail: this.state.EMail,\r\n      EventName: this.state.EventName,\r\n      EventType: this.state.EventType,\r\n      EventStart: this.state.EventStart,\r\n      EventEnd: this.state.EventEnd,\r\n      NoPeople: this.state.NoPeople,\r\n      EventPlace: this.state.EventPlace,\r\n\r\n    };\r\n    this.props.registerEvent(newEvent, this.props.history); \r\n\r\nconsole.log(newEvent);\r\ndocument.getElementById('EventForm').reset();\r\nconsole.log(this.props.auth)\r\n\r\n  };\r\n  onLogoutClick = e => {\r\n    e.preventDefault();\r\n    this.props.logoutUser();\r\n  };\r\nrender() {\r\n  const { errors } = this.state;\r\n\r\n    const { user } = this.props.auth;\r\nreturn (\r\n      <div style={{ height: \"75vh\" }} className=\"container valign-wrapper\">\r\n        <div className=\"row\">\r\n          <div className=\"col s12 center-align\">\r\n            <h4>\r\n              <b>Hey there,</b> {user.name.split(\" \")[0]} \r\n              <p className=\"flow-text grey-text text-darken-1\">\r\n                You are logged into a full-stack{\" \"}\r\n                <span style={{ fontFamily: \"monospace\" }}>MERN</span> app 👏\r\n              </p>\r\n            </h4>\r\n            \r\n            <button\r\n              style={{\r\n                width: \"150px\",\r\n                borderRadius: \"3px\",\r\n                letterSpacing: \"1.5px\",\r\n                marginTop: \"1rem\"\r\n              }}\r\n              onClick={this.onLogoutClick}\r\n              className=\"btn btn-large waves-effect waves-light hoverable blue accent-3\"\r\n            >\r\n              Logout\r\n            </button>\r\n          </div>\r\n        </div>\r\n        <div className=\"container\" style={{paddingTop:'400px'}}>\r\n        <div className=\"row\">\r\n          <div className=\"col s8 offset-s1\">\r\n            <Link to=\"/\" className=\"btn-flat waves-effect\">\r\n              <i className=\"material-icons left\">keyboard_backspace</i> Back to\r\n              home\r\n            </Link>\r\n            <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\r\n              <h4>Enter Event Details</h4>\r\n            </div>\r\n            <form id='EventForm' style={{paddingTop:'20px'}} noValidate onSubmit={this.onSubmit}>\r\n              <div className=\"input-field col s12\">\r\n                <input\r\n                  onChange={this.onChange}\r\n                  value={user.email}\r\n                  error={errors.EMail}\r\n                  id=\"EMail\"\r\n                  type=\"email\"\r\n                  className={classnames(\"\", {\r\n                    invalid: errors.EMail\r\n                  })}\r\n                />\r\n                <label htmlFor=\"EMail\">Email</label>\r\n                <span className=\"red-text\">{errors.EMail}</span>\r\n              </div>\r\n              <div className=\"input-field col s12\">\r\n                <input\r\n                  onChange={this.onChange}\r\n                  value={this.state.EventName}\r\n                  error={errors.EventName}\r\n                  id=\"EventName\"\r\n                  type=\"text\"\r\n                  className={classnames(\"\", {\r\n                    invalid: errors.EventName\r\n                  })}\r\n                />\r\n                <label htmlFor=\"EventName\">Name of Event</label>\r\n                <span className=\"red-text\">{errors.EventName}</span>\r\n              </div>\r\n              <div className=\"input-field col s12\">\r\n                <input\r\n                  onChange={this.onChange}\r\n                  value={this.state.EventType}\r\n                  error={errors.EventType}\r\n                  id=\"EventType\"\r\n                  type=\"text\"\r\n                  className={classnames(\"\", {\r\n                    invalid: errors.EventType\r\n                  })}\r\n                />\r\n                <label htmlFor=\"EventType\">Type of Event</label>\r\n                <span className=\"red-text\">{errors.EventType}</span>\r\n              </div>\r\n              <div className=\"input-field col s12\">\r\n                <input\r\n                  onChange={this.onChange}\r\n                  value={this.state.EventStart}\r\n                  error={errors.EventStart}\r\n                  id=\"EventStart\"\r\n                  type=\"date\"\r\n                  className={classnames(\"\", {\r\n                    invalid: errors.EventStart\r\n                  })}\r\n                />\r\n                <label htmlFor=\"EventStart\">Starting Date of Event </label>\r\n                <span className=\"red-text\">{errors.EventStart}</span>\r\n              </div>\r\n              <div className=\"input-field col s12\">\r\n                <input\r\n                  onChange={this.onChange}\r\n                  value={this.state.EventEnd}\r\n                  error={errors.EventEnd}\r\n                  id=\"EventEnd\"\r\n                  type=\"date\"\r\n                  className={classnames(\"\", {\r\n                    invalid: errors.EventEnd\r\n                  })}\r\n                />\r\n                <label htmlFor=\"EventEnd\">Ending Date of Event</label>\r\n                <span className=\"red-text\">{errors.EventEnd}</span>\r\n              </div>\r\n              <div className=\"input-field col s12\">\r\n                <input\r\n                  onChange={this.onChange}\r\n                  value={this.state.NoPeople}\r\n                  error={errors.NoPeople}\r\n                  id=\"NoPeople\"\r\n                  type=\"number\"\r\n                  className={classnames(\"\", {\r\n                    invalid: errors.NoPeople\r\n                  })}\r\n                />\r\n                <label htmlFor=\"NoPeople\">Expected Number of People In Event</label>\r\n                <span className=\"red-text\">{errors.NoPeople}</span>\r\n              </div>\r\n              <div className=\"input-field col s12\">\r\n                <input\r\n                  onChange={this.onChange}\r\n                  value={this.state.EventPlace}\r\n                  error={errors.EventPlace}\r\n                  id=\"EventPlace\"\r\n                  type=\"text\"\r\n                  className={classnames(\"\", {\r\n                    invalid: errors.EventPlace\r\n                  })}\r\n                />\r\n                <label htmlFor=\"EventPlace\">Place of Event</label>\r\n                <span className=\"red-text\">{errors.EventPlace}</span>\r\n              </div>\r\n              <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\r\n                <button\r\n                  style={{\r\n                    width: \"150px\",\r\n                    borderRadius: \"3px\",\r\n                    letterSpacing: \"1.5px\",\r\n                    marginTop: \"1rem\",\r\n                    fontSize: \"8px\"\r\n                  }}\r\n                  type=\"submit\"\r\n                  className=\"btn btn-large waves-effect waves-light hoverable blue accent-3\"\r\n                >\r\n                  Register Event\r\n                </button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nDashboard.propTypes = {\r\n  registerEvent: PropTypes.func.isRequired,\r\n  logoutUser: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth,\r\n  errors: state.errors\r\n});\r\nexport default connect(\r\n  mapStateToProps,\r\n  { logoutUser, registerEvent}\r\n)(Dashboard);"]},"metadata":{},"sourceType":"module"}