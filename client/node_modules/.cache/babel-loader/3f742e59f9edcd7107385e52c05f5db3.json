{"ast":null,"code":"import'./App.css';import{BrowserRouter as Router,Route,Switch}from\"react-router-dom\";import jwt_decode from\"jwt-decode\";import setAuthToken from\"./utils/setAuthToken\";import{setCurrentUser,logoutUser}from\"./actions/authActions\";import{Provider}from\"react-redux\";import store from\"./store\";import Navbar from\"./components/layout/Navbar\";import Landing from\"./components/layout/Landing\";import Register from\"./components/auth/Register\";import Login from\"./components/auth/Login\";import PrivateRoute from\"./components/private-route/PrivateRoute\";import Dashboard from\"./components/dashboard/Dashboard\";// Check for token to keep user logged in\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";if(localStorage.jwtToken){// Set auth token header auth\nvar token=localStorage.jwtToken;setAuthToken(token);// Decode token and get user info and exp\nvar decoded=jwt_decode(token);// Set user and isAuthenticated\nstore.dispatch(setCurrentUser(decoded));// Check for expired token\nvar currentTime=Date.now()/1000;// to get in milliseconds\nif(decoded.exp<currentTime){// Logout user\nstore.dispatch(logoutUser());// Redirect to login\nwindow.location.href=\"./login\";}}function App(){return/*#__PURE__*/_jsx(Provider,{store:store,children:/*#__PURE__*/_jsx(Router,{children:/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[/*#__PURE__*/_jsx(Navbar,{}),/*#__PURE__*/_jsx(Route,{exact:true,path:\"/\",component:Landing}),/*#__PURE__*/_jsx(Route,{exact:true,path:\"/register\",component:Register}),/*#__PURE__*/_jsx(Route,{exact:true,path:\"/login\",component:Login}),/*#__PURE__*/_jsx(Switch,{children:/*#__PURE__*/_jsx(PrivateRoute,{exact:true,path:\"/dashboard\",component:Dashboard})})]})})});}export default App;","map":{"version":3,"sources":["C:/Users/goura/Downloads/mern-App/client/src/App.js"],"names":["BrowserRouter","Router","Route","Switch","jwt_decode","setAuthToken","setCurrentUser","logoutUser","Provider","store","Navbar","Landing","Register","Login","PrivateRoute","Dashboard","localStorage","jwtToken","token","decoded","dispatch","currentTime","Date","now","exp","window","location","href","App"],"mappings":"AAAA,MAAO,WAAP,CACA,OAASA,aAAa,GAAIC,CAAAA,MAA1B,CAAkCC,KAAlC,CAAyCC,MAAzC,KAAsD,kBAAtD,CACA,MAAOC,CAAAA,UAAP,KAAuB,YAAvB,CACA,MAAOC,CAAAA,YAAP,KAAyB,sBAAzB,CACA,OAASC,cAAT,CAAyBC,UAAzB,KAA2C,uBAA3C,CAEA,OAASC,QAAT,KAAyB,aAAzB,CACA,MAAOC,CAAAA,KAAP,KAAkB,SAAlB,CAEA,MAAOC,CAAAA,MAAP,KAAmB,4BAAnB,CACA,MAAOC,CAAAA,OAAP,KAAoB,6BAApB,CACA,MAAOC,CAAAA,QAAP,KAAqB,4BAArB,CACA,MAAOC,CAAAA,KAAP,KAAkB,yBAAlB,CACA,MAAOC,CAAAA,YAAP,KAAyB,yCAAzB,CACA,MAAOC,CAAAA,SAAP,KAAsB,kCAAtB,CAEA;wFACA,GAAIC,YAAY,CAACC,QAAjB,CAA2B,CACzB;AACA,GAAMC,CAAAA,KAAK,CAAGF,YAAY,CAACC,QAA3B,CACAZ,YAAY,CAACa,KAAD,CAAZ,CACA;AACA,GAAMC,CAAAA,OAAO,CAAGf,UAAU,CAACc,KAAD,CAA1B,CACA;AACAT,KAAK,CAACW,QAAN,CAAed,cAAc,CAACa,OAAD,CAA7B,EACF;AACE,GAAME,CAAAA,WAAW,CAAGC,IAAI,CAACC,GAAL,GAAa,IAAjC,CAAuC;AACvC,GAAIJ,OAAO,CAACK,GAAR,CAAcH,WAAlB,CAA+B,CAC7B;AACAZ,KAAK,CAACW,QAAN,CAAeb,UAAU,EAAzB,EACA;AACAkB,MAAM,CAACC,QAAP,CAAgBC,IAAhB,CAAuB,SAAvB,CACD,CACF,CAED,QAASC,CAAAA,GAAT,EAAe,CACb,mBACE,KAAC,QAAD,EAAU,KAAK,CAAEnB,KAAjB,uBACA,KAAC,MAAD,wBACA,aAAK,SAAS,CAAC,KAAf,wBACA,KAAC,MAAD,IADA,cAEA,KAAC,KAAD,EAAO,KAAK,KAAZ,CAAa,IAAI,CAAC,GAAlB,CAAsB,SAAS,CAAEE,OAAjC,EAFA,cAGM,KAAC,KAAD,EAAO,KAAK,KAAZ,CAAa,IAAI,CAAC,WAAlB,CAA8B,SAAS,CAAEC,QAAzC,EAHN,cAIM,KAAC,KAAD,EAAO,KAAK,KAAZ,CAAa,IAAI,CAAC,QAAlB,CAA2B,SAAS,CAAEC,KAAtC,EAJN,cAKM,KAAC,MAAD,wBACI,KAAC,YAAD,EAAc,KAAK,KAAnB,CAAoB,IAAI,CAAC,YAAzB,CAAsC,SAAS,CAAEE,SAAjD,EADJ,EALN,GADA,EADA,EADF,CAgBD,CAED,cAAea,CAAAA,GAAf","sourcesContent":["import './App.css';\nimport { BrowserRouter as Router, Route, Switch} from \"react-router-dom\";\nimport jwt_decode from \"jwt-decode\";\nimport setAuthToken from \"./utils/setAuthToken\";\nimport { setCurrentUser, logoutUser } from \"./actions/authActions\";\n\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\n\nimport Navbar from \"./components/layout/Navbar\";\nimport Landing from \"./components/layout/Landing\";\nimport Register from \"./components/auth/Register\";\nimport Login from \"./components/auth/Login\";\nimport PrivateRoute from \"./components/private-route/PrivateRoute\";\nimport Dashboard from \"./components/dashboard/Dashboard\";\n\n// Check for token to keep user logged in\nif (localStorage.jwtToken) {\n  // Set auth token header auth\n  const token = localStorage.jwtToken;\n  setAuthToken(token);\n  // Decode token and get user info and exp\n  const decoded = jwt_decode(token);\n  // Set user and isAuthenticated\n  store.dispatch(setCurrentUser(decoded));\n// Check for expired token\n  const currentTime = Date.now() / 1000; // to get in milliseconds\n  if (decoded.exp < currentTime) {\n    // Logout user\n    store.dispatch(logoutUser());\n    // Redirect to login\n    window.location.href = \"./login\";\n  }\n}\n\nfunction App() {\n  return (\n    <Provider store={store}>\n    <Router>\n    <div className=\"App\">\n    <Navbar />\n    <Route exact path=\"/\" component={Landing} />\n          <Route exact path=\"/register\" component={Register} />\n          <Route exact path=\"/login\" component={Login} />   \n          <Switch>\n              <PrivateRoute exact path=\"/dashboard\" component={Dashboard} />\n            </Switch>\n     \n    </div>\n    </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}